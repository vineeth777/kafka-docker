[2016-07-08 06:09:17,426] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,452] INFO Property broker.id is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,452] INFO Property delete.topic.enable is overridden to true (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,452] INFO Property log.cleaner.enable is overridden to false (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,452] INFO Property log.dirs is overridden to /tmp/kafka-logs-1 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,453] INFO Property log.retention.check.interval.ms is overridden to 300000 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,453] INFO Property log.retention.hours is overridden to 168 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,453] INFO Property log.segment.bytes is overridden to 1073741824 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,453] INFO Property num.io.threads is overridden to 8 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,453] INFO Property num.network.threads is overridden to 3 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,453] INFO Property num.partitions is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,454] INFO Property num.recovery.threads.per.data.dir is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,454] INFO Property port is overridden to 9092 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,454] INFO Property socket.receive.buffer.bytes is overridden to 102400 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,454] INFO Property socket.request.max.bytes is overridden to 104857600 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,454] INFO Property socket.send.buffer.bytes is overridden to 102400 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,454] INFO Property zookeeper.connect is overridden to localhost:2181 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,455] INFO Property zookeeper.connection.timeout.ms is overridden to 6000 (kafka.utils.VerifiableProperties)
[2016-07-08 06:09:17,508] INFO [Kafka Server 1], starting (kafka.server.KafkaServer)
[2016-07-08 06:09:17,510] INFO [Kafka Server 1], Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2016-07-08 06:09:17,744] INFO Log directory '/tmp/kafka-logs-1' not found, creating it. (kafka.log.LogManager)
[2016-07-08 06:09:17,751] INFO Loading logs. (kafka.log.LogManager)
[2016-07-08 06:09:17,756] INFO Logs loading complete. (kafka.log.LogManager)
[2016-07-08 06:09:17,757] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2016-07-08 06:09:17,759] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2016-07-08 06:09:17,784] FATAL [Kafka Server 1], Fatal error during KafkaServer startup. Prepare to shutdown (kafka.server.KafkaServer)
kafka.common.KafkaException: Socket server failed to bind to 0.0.0.0:9092: Address already in use.
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:260)
	at kafka.network.Acceptor.<init>(SocketServer.scala:205)
	at kafka.network.SocketServer.startup(SocketServer.scala:86)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:99)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:463)
	at sun.nio.ch.Net.bind(Net.java:455)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:67)
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:256)
	... 6 more
[2016-07-08 06:09:17,792] INFO [Kafka Server 1], shutting down (kafka.server.KafkaServer)
[2016-07-08 06:09:17,794] INFO [Socket Server on Broker 1], Shutting down (kafka.network.SocketServer)
[2016-07-08 06:09:17,796] INFO [Socket Server on Broker 1], Shutdown completed (kafka.network.SocketServer)
[2016-07-08 06:09:17,798] INFO Shutting down. (kafka.log.LogManager)
[2016-07-08 06:09:17,808] INFO Shutdown complete. (kafka.log.LogManager)
[2016-07-08 06:09:17,811] INFO [Kafka Server 1], shut down completed (kafka.server.KafkaServer)
[2016-07-08 06:09:17,811] FATAL Fatal error during KafkaServerStartable startup. Prepare to shutdown (kafka.server.KafkaServerStartable)
kafka.common.KafkaException: Socket server failed to bind to 0.0.0.0:9092: Address already in use.
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:260)
	at kafka.network.Acceptor.<init>(SocketServer.scala:205)
	at kafka.network.SocketServer.startup(SocketServer.scala:86)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:99)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:463)
	at sun.nio.ch.Net.bind(Net.java:455)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:67)
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:256)
	... 6 more
[2016-07-08 06:09:17,813] INFO [Kafka Server 1], shutting down (kafka.server.KafkaServer)
[2016-07-08 06:10:41,363] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,390] INFO Property broker.id is overridden to 2 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,391] INFO Property delete.topic.enable is overridden to true (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,391] INFO Property log.cleaner.enable is overridden to false (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,391] INFO Property log.dirs is overridden to /tmp/kafka-logs-2 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,391] INFO Property log.retention.check.interval.ms is overridden to 300000 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,391] INFO Property log.retention.hours is overridden to 168 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,391] INFO Property log.segment.bytes is overridden to 1073741824 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,391] INFO Property num.io.threads is overridden to 8 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,392] INFO Property num.network.threads is overridden to 3 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,392] INFO Property num.partitions is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,392] INFO Property num.recovery.threads.per.data.dir is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,392] INFO Property port is overridden to 9093 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,392] INFO Property socket.receive.buffer.bytes is overridden to 102400 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,392] INFO Property socket.request.max.bytes is overridden to 104857600 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,393] INFO Property socket.send.buffer.bytes is overridden to 102400 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,393] INFO Property zookeeper.connect is overridden to localhost:2181 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,393] INFO Property zookeeper.connection.timeout.ms is overridden to 6000 (kafka.utils.VerifiableProperties)
[2016-07-08 06:10:41,425] INFO [Kafka Server 2], starting (kafka.server.KafkaServer)
[2016-07-08 06:10:41,427] INFO [Kafka Server 2], Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2016-07-08 06:10:41,654] INFO Log directory '/tmp/kafka-logs-2' not found, creating it. (kafka.log.LogManager)
[2016-07-08 06:10:41,659] INFO Loading logs. (kafka.log.LogManager)
[2016-07-08 06:10:41,664] INFO Logs loading complete. (kafka.log.LogManager)
[2016-07-08 06:10:41,664] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2016-07-08 06:10:41,667] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2016-07-08 06:10:41,690] INFO Awaiting socket connections on 0.0.0.0:9093. (kafka.network.Acceptor)
[2016-07-08 06:10:41,690] INFO [Socket Server on Broker 2], Started (kafka.network.SocketServer)
[2016-07-08 06:10:41,758] INFO Will not load MX4J, mx4j-tools.jar is not in the classpath (kafka.utils.Mx4jLoader$)
[2016-07-08 06:10:41,809] INFO Registered broker 2 at path /brokers/ids/2 with address ip-172-31-41-134.us-west-2.compute.internal:9093. (kafka.utils.ZkUtils$)
[2016-07-08 06:10:41,841] INFO [Kafka Server 2], started (kafka.server.KafkaServer)
[2016-07-08 06:13:56,684] INFO Closing socket connection to /172.31.41.134. (kafka.network.Processor)
[2016-07-08 06:15:33,317] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:22:56,477] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:24:00,948] INFO Closing socket connection to /172.31.41.134. (kafka.network.Processor)
[2016-07-08 06:30:05,075] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:30:05,081] ERROR [KafkaApi-2] error when handling request Name: TopicMetadataRequest; Version: 0; CorrelationId: 2; ClientId: console-producer; Topics: $hostname (kafka.server.KafkaApis)
kafka.common.InvalidTopicException: topic name $hostname is illegal, contains a character other than ASCII alphanumerics, '.', '_' and '-'
	at kafka.common.Topic$.validate(Topic.scala:42)
	at kafka.admin.AdminUtils$.createOrUpdateTopicPartitionAssignmentPathInZK(AdminUtils.scala:181)
	at kafka.admin.AdminUtils$.createTopic(AdminUtils.scala:172)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:520)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:503)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)
	at scala.collection.AbstractSet.scala$collection$SetLike$$super$map(Set.scala:47)
	at scala.collection.SetLike$class.map(SetLike.scala:92)
	at scala.collection.AbstractSet.map(Set.scala:47)
	at kafka.server.KafkaApis.getTopicMetadata(KafkaApis.scala:503)
	at kafka.server.KafkaApis.handleTopicMetadataRequest(KafkaApis.scala:542)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:62)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:59)
	at java.lang.Thread.run(Thread.java:745)
[2016-07-08 06:30:05,183] ERROR [KafkaApi-2] error when handling request Name: TopicMetadataRequest; Version: 0; CorrelationId: 5; ClientId: console-producer; Topics: $hostname (kafka.server.KafkaApis)
kafka.common.InvalidTopicException: topic name $hostname is illegal, contains a character other than ASCII alphanumerics, '.', '_' and '-'
	at kafka.common.Topic$.validate(Topic.scala:42)
	at kafka.admin.AdminUtils$.createOrUpdateTopicPartitionAssignmentPathInZK(AdminUtils.scala:181)
	at kafka.admin.AdminUtils$.createTopic(AdminUtils.scala:172)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:520)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:503)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)
	at scala.collection.AbstractSet.scala$collection$SetLike$$super$map(Set.scala:47)
	at scala.collection.SetLike$class.map(SetLike.scala:92)
	at scala.collection.AbstractSet.map(Set.scala:47)
	at kafka.server.KafkaApis.getTopicMetadata(KafkaApis.scala:503)
	at kafka.server.KafkaApis.handleTopicMetadataRequest(KafkaApis.scala:542)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:62)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:59)
	at java.lang.Thread.run(Thread.java:745)
[2016-07-08 06:30:05,185] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:30:05,294] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:30:05,295] ERROR [KafkaApi-2] error when handling request Name: TopicMetadataRequest; Version: 0; CorrelationId: 7; ClientId: console-producer; Topics: $hostname (kafka.server.KafkaApis)
kafka.common.InvalidTopicException: topic name $hostname is illegal, contains a character other than ASCII alphanumerics, '.', '_' and '-'
	at kafka.common.Topic$.validate(Topic.scala:42)
	at kafka.admin.AdminUtils$.createOrUpdateTopicPartitionAssignmentPathInZK(AdminUtils.scala:181)
	at kafka.admin.AdminUtils$.createTopic(AdminUtils.scala:172)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:520)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:503)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)
	at scala.collection.AbstractSet.scala$collection$SetLike$$super$map(Set.scala:47)
	at scala.collection.SetLike$class.map(SetLike.scala:92)
	at scala.collection.AbstractSet.map(Set.scala:47)
	at kafka.server.KafkaApis.getTopicMetadata(KafkaApis.scala:503)
	at kafka.server.KafkaApis.handleTopicMetadataRequest(KafkaApis.scala:542)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:62)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:59)
	at java.lang.Thread.run(Thread.java:745)
[2016-07-08 06:30:05,298] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:30:05,298] ERROR [KafkaApi-2] error when handling request Name: TopicMetadataRequest; Version: 0; CorrelationId: 6; ClientId: console-producer; Topics: $hostname (kafka.server.KafkaApis)
kafka.common.InvalidTopicException: topic name $hostname is illegal, contains a character other than ASCII alphanumerics, '.', '_' and '-'
	at kafka.common.Topic$.validate(Topic.scala:42)
	at kafka.admin.AdminUtils$.createOrUpdateTopicPartitionAssignmentPathInZK(AdminUtils.scala:181)
	at kafka.admin.AdminUtils$.createTopic(AdminUtils.scala:172)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:520)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:503)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)
	at scala.collection.AbstractSet.scala$collection$SetLike$$super$map(Set.scala:47)
	at scala.collection.SetLike$class.map(SetLike.scala:92)
	at scala.collection.AbstractSet.map(Set.scala:47)
	at kafka.server.KafkaApis.getTopicMetadata(KafkaApis.scala:503)
	at kafka.server.KafkaApis.handleTopicMetadataRequest(KafkaApis.scala:542)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:62)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:59)
	at java.lang.Thread.run(Thread.java:745)
[2016-07-08 06:30:45,424] ERROR [KafkaApi-2] error when handling request Name: TopicMetadataRequest; Version: 0; CorrelationId: 0; ClientId: console-producer; Topics: $hostname (kafka.server.KafkaApis)
kafka.common.InvalidTopicException: topic name $hostname is illegal, contains a character other than ASCII alphanumerics, '.', '_' and '-'
	at kafka.common.Topic$.validate(Topic.scala:42)
	at kafka.admin.AdminUtils$.createOrUpdateTopicPartitionAssignmentPathInZK(AdminUtils.scala:181)
	at kafka.admin.AdminUtils$.createTopic(AdminUtils.scala:172)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:520)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:503)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)
	at scala.collection.AbstractSet.scala$collection$SetLike$$super$map(Set.scala:47)
	at scala.collection.SetLike$class.map(SetLike.scala:92)
	at scala.collection.AbstractSet.map(Set.scala:47)
	at kafka.server.KafkaApis.getTopicMetadata(KafkaApis.scala:503)
	at kafka.server.KafkaApis.handleTopicMetadataRequest(KafkaApis.scala:542)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:62)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:59)
	at java.lang.Thread.run(Thread.java:745)
[2016-07-08 06:30:45,441] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:30:45,465] ERROR [KafkaApi-2] error when handling request Name: TopicMetadataRequest; Version: 0; CorrelationId: 1; ClientId: console-producer; Topics: $hostname (kafka.server.KafkaApis)
kafka.common.InvalidTopicException: topic name $hostname is illegal, contains a character other than ASCII alphanumerics, '.', '_' and '-'
	at kafka.common.Topic$.validate(Topic.scala:42)
	at kafka.admin.AdminUtils$.createOrUpdateTopicPartitionAssignmentPathInZK(AdminUtils.scala:181)
	at kafka.admin.AdminUtils$.createTopic(AdminUtils.scala:172)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:520)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:503)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)
	at scala.collection.AbstractSet.scala$collection$SetLike$$super$map(Set.scala:47)
	at scala.collection.SetLike$class.map(SetLike.scala:92)
	at scala.collection.AbstractSet.map(Set.scala:47)
	at kafka.server.KafkaApis.getTopicMetadata(KafkaApis.scala:503)
	at kafka.server.KafkaApis.handleTopicMetadataRequest(KafkaApis.scala:542)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:62)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:59)
	at java.lang.Thread.run(Thread.java:745)
[2016-07-08 06:30:45,467] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:30:45,576] ERROR [KafkaApi-2] error when handling request Name: TopicMetadataRequest; Version: 0; CorrelationId: 3; ClientId: console-producer; Topics: $hostname (kafka.server.KafkaApis)
kafka.common.InvalidTopicException: topic name $hostname is illegal, contains a character other than ASCII alphanumerics, '.', '_' and '-'
	at kafka.common.Topic$.validate(Topic.scala:42)
	at kafka.admin.AdminUtils$.createOrUpdateTopicPartitionAssignmentPathInZK(AdminUtils.scala:181)
	at kafka.admin.AdminUtils$.createTopic(AdminUtils.scala:172)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:520)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:503)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)
	at scala.collection.AbstractSet.scala$collection$SetLike$$super$map(Set.scala:47)
	at scala.collection.SetLike$class.map(SetLike.scala:92)
	at scala.collection.AbstractSet.map(Set.scala:47)
	at kafka.server.KafkaApis.getTopicMetadata(KafkaApis.scala:503)
	at kafka.server.KafkaApis.handleTopicMetadataRequest(KafkaApis.scala:542)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:62)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:59)
	at java.lang.Thread.run(Thread.java:745)
[2016-07-08 06:30:45,582] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:30:45,687] ERROR [KafkaApi-2] error when handling request Name: TopicMetadataRequest; Version: 0; CorrelationId: 5; ClientId: console-producer; Topics: $hostname (kafka.server.KafkaApis)
kafka.common.InvalidTopicException: topic name $hostname is illegal, contains a character other than ASCII alphanumerics, '.', '_' and '-'
	at kafka.common.Topic$.validate(Topic.scala:42)
	at kafka.admin.AdminUtils$.createOrUpdateTopicPartitionAssignmentPathInZK(AdminUtils.scala:181)
	at kafka.admin.AdminUtils$.createTopic(AdminUtils.scala:172)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:520)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:503)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)
	at scala.collection.AbstractSet.scala$collection$SetLike$$super$map(Set.scala:47)
	at scala.collection.SetLike$class.map(SetLike.scala:92)
	at scala.collection.AbstractSet.map(Set.scala:47)
	at kafka.server.KafkaApis.getTopicMetadata(KafkaApis.scala:503)
	at kafka.server.KafkaApis.handleTopicMetadataRequest(KafkaApis.scala:542)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:62)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:59)
	at java.lang.Thread.run(Thread.java:745)
[2016-07-08 06:30:45,689] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:30:45,791] ERROR [KafkaApi-2] error when handling request Name: TopicMetadataRequest; Version: 0; CorrelationId: 6; ClientId: console-producer; Topics: $hostname (kafka.server.KafkaApis)
kafka.common.InvalidTopicException: topic name $hostname is illegal, contains a character other than ASCII alphanumerics, '.', '_' and '-'
	at kafka.common.Topic$.validate(Topic.scala:42)
	at kafka.admin.AdminUtils$.createOrUpdateTopicPartitionAssignmentPathInZK(AdminUtils.scala:181)
	at kafka.admin.AdminUtils$.createTopic(AdminUtils.scala:172)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:520)
	at kafka.server.KafkaApis$$anonfun$19.apply(KafkaApis.scala:503)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)
	at scala.collection.AbstractSet.scala$collection$SetLike$$super$map(Set.scala:47)
	at scala.collection.SetLike$class.map(SetLike.scala:92)
	at scala.collection.AbstractSet.map(Set.scala:47)
	at kafka.server.KafkaApis.getTopicMetadata(KafkaApis.scala:503)
	at kafka.server.KafkaApis.handleTopicMetadataRequest(KafkaApis.scala:542)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:62)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:59)
	at java.lang.Thread.run(Thread.java:745)
[2016-07-08 06:30:45,794] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:30:59,529] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:31:30,693] INFO Closing socket connection to /172.31.41.134. (kafka.network.Processor)
[2016-07-08 06:35:53,050] INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions [ps,0] (kafka.server.ReplicaFetcherManager)
[2016-07-08 06:35:53,109] INFO Completed load of log ps-0 with log end offset 0 (kafka.log.Log)
[2016-07-08 06:35:53,118] INFO Created log for partition [ps,0] in /tmp/kafka-logs-2 with properties {segment.index.bytes -> 10485760, file.delete.delay.ms -> 60000, segment.bytes -> 1073741824, flush.ms -> 9223372036854775807, delete.retention.ms -> 86400000, index.interval.bytes -> 4096, retention.bytes -> -1, min.insync.replicas -> 1, cleanup.policy -> delete, unclean.leader.election.enable -> true, segment.ms -> 604800000, max.message.bytes -> 1000012, flush.messages -> 9223372036854775807, min.cleanable.dirty.ratio -> 0.5, retention.ms -> 604800000, segment.jitter.ms -> 0}. (kafka.log.LogManager)
[2016-07-08 06:35:53,124] WARN [Replica Manager on Broker 2]: Fetch request with correlation id 0 from client ReplicaFetcherThread-0-2 on partition [ps,0] failed due to Leader not local for partition [ps,0] on broker 2 (kafka.server.ReplicaManager)
[2016-07-08 06:35:53,125] WARN Partition [ps,0] on broker 2: No checkpointed highwatermark is found for partition [ps,0] (kafka.cluster.Partition)
[2016-07-08 06:35:53,166] ERROR [KafkaApi-2] error when handling request Name: FetchRequest; Version: 0; CorrelationId: 0; ClientId: ReplicaFetcherThread-0-2; ReplicaId: 0; MaxWait: 500 ms; MinBytes: 1 bytes; RequestInfo: [ps,0] -> PartitionFetchInfo(0,1048576) (kafka.server.KafkaApis)
kafka.common.NotAssignedReplicaException: Leader 2 failed to record follower 0's position -1 since the replica is not recognized to be one of the assigned replicas  for partition [ps,0]
	at kafka.server.ReplicaManager.updateReplicaLEOAndPartitionHW(ReplicaManager.scala:574)
	at kafka.server.KafkaApis$$anonfun$recordFollowerLogEndOffsets$2.apply(KafkaApis.scala:388)
	at kafka.server.KafkaApis$$anonfun$recordFollowerLogEndOffsets$2.apply(KafkaApis.scala:386)
	at scala.collection.MapLike$MappedValues$$anonfun$foreach$3.apply(MapLike.scala:245)
	at scala.collection.MapLike$MappedValues$$anonfun$foreach$3.apply(MapLike.scala:245)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:116)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at scala.collection.MapLike$MappedValues.foreach(MapLike.scala:245)
	at kafka.server.KafkaApis.recordFollowerLogEndOffsets(KafkaApis.scala:386)
	at kafka.server.KafkaApis.handleFetchRequest(KafkaApis.scala:351)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:60)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:59)
	at java.lang.Thread.run(Thread.java:745)
[2016-07-08 06:35:53,171] INFO Completed load of log ps-1 with log end offset 0 (kafka.log.Log)
[2016-07-08 06:35:53,173] INFO Created log for partition [ps,1] in /tmp/kafka-logs-2 with properties {segment.index.bytes -> 10485760, file.delete.delay.ms -> 60000, segment.bytes -> 1073741824, flush.ms -> 9223372036854775807, delete.retention.ms -> 86400000, index.interval.bytes -> 4096, retention.bytes -> -1, min.insync.replicas -> 1, cleanup.policy -> delete, unclean.leader.election.enable -> true, segment.ms -> 604800000, max.message.bytes -> 1000012, flush.messages -> 9223372036854775807, min.cleanable.dirty.ratio -> 0.5, retention.ms -> 604800000, segment.jitter.ms -> 0}. (kafka.log.LogManager)
[2016-07-08 06:35:53,174] WARN Partition [ps,1] on broker 2: No checkpointed highwatermark is found for partition [ps,1] (kafka.cluster.Partition)
[2016-07-08 06:35:53,175] INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions [ps,1] (kafka.server.ReplicaFetcherManager)
[2016-07-08 06:35:53,177] INFO Truncating log ps-1 to offset 0. (kafka.log.Log)
[2016-07-08 06:35:53,202] INFO [ReplicaFetcherManager on broker 2] Added fetcher for partitions List([[ps,1], initOffset 0 to broker id:0,host:ip-172-31-41-134.us-west-2.compute.internal,port:9092] ) (kafka.server.ReplicaFetcherManager)
[2016-07-08 06:35:53,219] INFO [ReplicaFetcherThread-0-0], Starting  (kafka.server.ReplicaFetcherThread)
[2016-07-08 06:36:58,606] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2016-07-08 06:36:59,072] INFO Closing socket connection to /172.31.41.134. (kafka.network.Processor)
[2016-07-08 06:37:23,457] INFO Closing socket connection to /172.31.41.134. (kafka.network.Processor)
[2016-07-08 06:37:30,294] INFO Closing socket connection to /172.31.41.134. (kafka.network.Processor)
[2016-07-08 06:44:57,183] INFO [Kafka Server 2], shutting down (kafka.server.KafkaServer)
[2016-07-08 06:44:57,184] INFO [Kafka Server 2], Starting controlled shutdown (kafka.server.KafkaServer)
[2016-07-08 06:44:57,265] INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions [ps,0] (kafka.server.ReplicaFetcherManager)
[2016-07-08 06:44:57,273] INFO Truncating log ps-0 to offset 302. (kafka.log.Log)
[2016-07-08 06:44:57,294] INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions [ps,1] (kafka.server.ReplicaFetcherManager)
[2016-07-08 06:44:57,296] INFO [ReplicaFetcherThread-0-0], Shutting down (kafka.server.ReplicaFetcherThread)
[2016-07-08 06:44:57,305] WARN [Replica Manager on Broker 2]: Fetch request with correlation id 4557 from client console-consumer-56951 on partition [ps,0] failed due to Leader not local for partition [ps,0] on broker 2 (kafka.server.ReplicaManager)
[2016-07-08 06:44:57,322] INFO [Kafka Server 2], Controlled shutdown succeeded (kafka.server.KafkaServer)
[2016-07-08 06:44:57,324] INFO [Socket Server on Broker 2], Shutting down (kafka.network.SocketServer)
[2016-07-08 06:44:57,330] INFO [Socket Server on Broker 2], Shutdown completed (kafka.network.SocketServer)
[2016-07-08 06:44:57,331] INFO [Kafka Request Handler on Broker 2], shutting down (kafka.server.KafkaRequestHandlerPool)
[2016-07-08 06:44:57,543] INFO [ReplicaFetcherThread-0-0], Stopped  (kafka.server.ReplicaFetcherThread)
[2016-07-08 06:44:57,543] INFO [ReplicaFetcherThread-0-0], Shutdown completed (kafka.server.ReplicaFetcherThread)
[2016-07-08 06:44:57,544] INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions [ps,1] (kafka.server.ReplicaFetcherManager)
[2016-07-08 06:44:57,545] INFO [Kafka Request Handler on Broker 2], shut down completely (kafka.server.KafkaRequestHandlerPool)
[2016-07-08 06:44:57,549] WARN [Replica Manager on Broker 2]: Fetch request with correlation id 1273 from client ReplicaFetcherThread-0-2 on partition [ps,0] failed due to Leader not local for partition [ps,0] on broker 2 (kafka.server.ReplicaManager)
[2016-07-08 06:44:57,614] INFO [Replica Manager on Broker 2]: Shut down (kafka.server.ReplicaManager)
[2016-07-08 06:44:57,614] INFO [ReplicaFetcherManager on broker 2] shutting down (kafka.server.ReplicaFetcherManager)
[2016-07-08 06:44:57,615] INFO [ReplicaFetcherManager on broker 2] shutdown completed (kafka.server.ReplicaFetcherManager)
[2016-07-08 06:44:57,618] INFO [Replica Manager on Broker 2]: Shut down completely (kafka.server.ReplicaManager)
[2016-07-08 06:44:57,618] INFO Shutting down. (kafka.log.LogManager)
[2016-07-08 06:44:57,642] INFO Shutdown complete. (kafka.log.LogManager)
[2016-07-08 06:44:57,643] WARN Kafka scheduler has not been started (kafka.utils.Utils$)
java.lang.IllegalStateException: Kafka scheduler has not been started
	at kafka.utils.KafkaScheduler.ensureStarted(KafkaScheduler.scala:114)
	at kafka.utils.KafkaScheduler.shutdown(KafkaScheduler.scala:86)
	at kafka.controller.KafkaController.onControllerResignation(KafkaController.scala:350)
	at kafka.controller.KafkaController.shutdown(KafkaController.scala:664)
	at kafka.server.KafkaServer$$anonfun$shutdown$8.apply$mcV$sp(KafkaServer.scala:285)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowWarn(Logging.scala:92)
	at kafka.utils.Utils$.swallowWarn(Utils.scala:45)
	at kafka.utils.Logging$class.swallow(Logging.scala:94)
	at kafka.utils.Utils$.swallow(Utils.scala:45)
	at kafka.server.KafkaServer.shutdown(KafkaServer.scala:285)
	at kafka.server.KafkaServerStartable.shutdown(KafkaServerStartable.scala:42)
	at kafka.Kafka$$anon$1.run(Kafka.scala:42)
[2016-07-08 06:44:57,653] INFO [Kafka Server 2], shut down completed (kafka.server.KafkaServer)
