[2016-07-08 06:01:04,502] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-07-08 06:01:04,503] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([TutorialTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-07-08 06:01:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:01:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:06:04,502] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-07-08 06:06:04,503] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([TutorialTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-07-08 06:06:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:06:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:10:41,761] INFO [Controller 2]: Controller starting up (kafka.controller.KafkaController)
[2016-07-08 06:10:41,787] INFO [Controller 2]: Controller startup complete (kafka.controller.KafkaController)
[2016-07-08 06:10:41,804] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 2,0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-07-08 06:10:41,861] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 2, deleted brokers: , all live brokers: 2,0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-07-08 06:10:41,861] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-07-08 06:10:41,866] INFO [Controller-0-to-broker-2-send-thread], Controller 0 connected to id:2,host:ip-172-31-41-134.us-west-2.compute.internal,port:9093 for sending state change requests (kafka.controller.RequestSendThread)
[2016-07-08 06:10:41,866] INFO [Controller 0]: New broker startup callback for 2 (kafka.controller.KafkaController)
[2016-07-08 06:10:41,866] INFO [Controller-0-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-07-08 06:11:04,502] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-07-08 06:11:04,503] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([TutorialTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-07-08 06:11:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:11:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:16:04,502] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-07-08 06:16:04,503] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([TutorialTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-07-08 06:16:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:16:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:21:04,502] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-07-08 06:21:04,503] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([TutorialTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-07-08 06:21:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:21:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:26:04,502] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-07-08 06:26:04,503] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([TutorialTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-07-08 06:26:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:26:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:30:59,355] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children producer,TutorialTopic (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-07-08 06:30:59,367] INFO [TopicChangeListener on Controller 0]: New topics: [Set(producer)], deleted topics: [Set()], new partition replica assignment [Map([producer,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-07-08 06:30:59,367] INFO [Controller 0]: New topic creation callback for [producer,0] (kafka.controller.KafkaController)
[2016-07-08 06:30:59,373] INFO [Controller 0]: New partition creation callback for [producer,0] (kafka.controller.KafkaController)
[2016-07-08 06:30:59,373] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [producer,0] (kafka.controller.PartitionStateMachine)
[2016-07-08 06:30:59,379] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=producer,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-07-08 06:30:59,382] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [producer,0] (kafka.controller.PartitionStateMachine)
[2016-07-08 06:30:59,382] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [producer,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2016-07-08 06:30:59,382] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [producer,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2016-07-08 06:30:59,398] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 1 fails to send request Name:LeaderAndIsrRequest;Version:0;Controller:0;ControllerEpoch:1;CorrelationId:13;ClientId:id_0-host_null-port_9092;Leaders:id:0,host:ip-172-31-41-134.us-west-2.compute.internal,port:9092;PartitionState:(producer,0) -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) to broker id:0,host:ip-172-31-41-134.us-west-2.compute.internal,port:9092. Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Broken pipe
	at sun.nio.ch.FileDispatcherImpl.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:529)
	at java.nio.channels.SocketChannel.write(SocketChannel.java:493)
	at kafka.network.BoundedByteBufferSend.writeTo(BoundedByteBufferSend.scala:56)
	at kafka.network.Send$class.writeCompletely(Transmission.scala:75)
	at kafka.network.BoundedByteBufferSend.writeCompletely(BoundedByteBufferSend.scala:26)
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:103)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:132)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2016-07-08 06:30:59,400] WARN [Controller-0-to-broker-2-send-thread], Controller 0 epoch 1 fails to send request Name:UpdateMetadataRequest;Version:0;Controller:0;ControllerEpoch:1;CorrelationId:13;ClientId:id_0-host_null-port_9092;AliveBrokers:id:2,host:ip-172-31-41-134.us-west-2.compute.internal,port:9093,id:0,host:ip-172-31-41-134.us-west-2.compute.internal,port:9092;PartitionState:[producer,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) to broker id:2,host:ip-172-31-41-134.us-west-2.compute.internal,port:9093. Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:133)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2016-07-08 06:30:59,400] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=producer,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-07-08 06:30:59,401] INFO [Controller-0-to-broker-2-send-thread], Controller 0 connected to id:2,host:ip-172-31-41-134.us-west-2.compute.internal,port:9093 for sending state change requests (kafka.controller.RequestSendThread)
[2016-07-08 06:30:59,402] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:ip-172-31-41-134.us-west-2.compute.internal,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2016-07-08 06:31:04,502] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-07-08 06:31:04,503] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([producer,0] -> List(0), [TutorialTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-07-08 06:31:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:31:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:35:52,966] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children producer,TutorialTopic,ps (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-07-08 06:35:52,992] INFO [TopicChangeListener on Controller 0]: New topics: [Set(ps)], deleted topics: [Set()], new partition replica assignment [Map([ps,0] -> List(2, 0), [ps,1] -> List(0, 2))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-07-08 06:35:52,992] INFO [Controller 0]: New topic creation callback for [ps,0],[ps,1] (kafka.controller.KafkaController)
[2016-07-08 06:35:52,992] INFO [Controller 0]: New partition creation callback for [ps,0],[ps,1] (kafka.controller.KafkaController)
[2016-07-08 06:35:52,992] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [ps,0],[ps,1] (kafka.controller.PartitionStateMachine)
[2016-07-08 06:35:53,011] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=ps,Partition=0,Replica=2],[Topic=ps,Partition=0,Replica=0],[Topic=ps,Partition=1,Replica=0],[Topic=ps,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-07-08 06:35:53,013] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [ps,0],[ps,1] (kafka.controller.PartitionStateMachine)
[2016-07-08 06:35:53,013] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [ps,0] are: [List(2, 0)] (kafka.controller.PartitionStateMachine)
[2016-07-08 06:35:53,013] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [ps,0] to (Leader:2,ISR:2,0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2016-07-08 06:35:53,018] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [ps,1] are: [List(0, 2)] (kafka.controller.PartitionStateMachine)
[2016-07-08 06:35:53,018] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [ps,1] to (Leader:0,ISR:0,2,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2016-07-08 06:35:53,036] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=ps,Partition=0,Replica=2],[Topic=ps,Partition=0,Replica=0],[Topic=ps,Partition=1,Replica=0],[Topic=ps,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-07-08 06:36:04,502] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-07-08 06:36:04,503] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([ps,0] -> List(2, 0)), 0 -> Map([producer,0] -> List(0), [TutorialTopic,0] -> List(0), [ps,1] -> List(0, 2))) (kafka.controller.KafkaController)
[2016-07-08 06:36:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:36:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:36:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:36:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:41:04,502] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-07-08 06:41:04,503] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([ps,0] -> List(2, 0)), 0 -> Map([producer,0] -> List(0), [TutorialTopic,0] -> List(0), [ps,1] -> List(0, 2))) (kafka.controller.KafkaController)
[2016-07-08 06:41:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:41:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:41:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:41:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:44:57,229] INFO [Controller 0]: Shutting down broker 2 (kafka.controller.KafkaController)
[2016-07-08 06:44:57,230] DEBUG [Controller 0]: All shutting down brokers: 2 (kafka.controller.KafkaController)
[2016-07-08 06:44:57,230] DEBUG [Controller 0]: Live brokers: 0 (kafka.controller.KafkaController)
[2016-07-08 06:44:57,234] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [ps,0] (kafka.controller.PartitionStateMachine)
[2016-07-08 06:44:57,258] DEBUG [ControlledShutdownLeaderSelector]: Partition [ps,0] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-07-08 06:44:57,263] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([producer,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [TutorialTopic,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [ps,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1), [ps,1] -> (Leader:0,ISR:0,2,LeaderEpoch:0,ControllerEpoch:1)) (kafka.controller.PartitionStateMachine)
[2016-07-08 06:44:57,276] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-07-08 06:44:57,277] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=ps,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-07-08 06:44:57,285] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=ps,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-07-08 06:44:57,286] DEBUG [Controller 0]: Removing replica 2 from ISR 0,2 for partition [ps,1]. (kafka.controller.KafkaController)
[2016-07-08 06:44:57,310] INFO [Controller 0]: New leader and ISR for partition [ps,1] is {"leader":0,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2016-07-08 06:44:57,316] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-07-08 06:44:57,316] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=ps,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-07-08 06:44:57,317] TRACE [Controller 0]: All leaders = [producer,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),[ps,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1),[TutorialTopic,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),[ps,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1) (kafka.controller.KafkaController)
[2016-07-08 06:44:57,329] WARN [Controller-0-to-broker-2-send-thread], Controller 0 epoch 1 fails to send request Name: StopReplicaRequest; Version: 0; CorrelationId: 21; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 1; Partitions: [ps,1] to broker id:2,host:ip-172-31-41-134.us-west-2.compute.internal,port:9093. Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:133)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2016-07-08 06:44:57,332] INFO [Controller-0-to-broker-2-send-thread], Controller 0 connected to id:2,host:ip-172-31-41-134.us-west-2.compute.internal,port:9093 for sending state change requests (kafka.controller.RequestSendThread)
[2016-07-08 06:44:57,632] WARN [Controller-0-to-broker-2-send-thread], Controller 0 epoch 1 fails to send request Name: StopReplicaRequest; Version: 0; CorrelationId: 21; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 1; Partitions: [ps,1] to broker id:2,host:ip-172-31-41-134.us-west-2.compute.internal,port:9093. Reconnecting to broker. (kafka.controller.RequestSendThread)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:132)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2016-07-08 06:44:57,632] INFO [Controller-0-to-broker-2-send-thread], Controller 0 connected to id:2,host:ip-172-31-41-134.us-west-2.compute.internal,port:9093 for sending state change requests (kafka.controller.RequestSendThread)
[2016-07-08 06:44:57,650] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-07-08 06:44:57,664] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: , deleted brokers: 2, all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-07-08 06:44:57,664] INFO [Controller-0-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-07-08 06:44:57,665] ERROR [Controller-0-to-broker-2-send-thread], Controller 0 fails to send a request to broker id:2,host:ip-172-31-41-134.us-west-2.compute.internal,port:9093 (kafka.controller.RequestSendThread)
java.lang.NullPointerException
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:152)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2016-07-08 06:44:57,666] INFO [Controller-0-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-07-08 06:44:57,666] INFO [Controller-0-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-07-08 06:44:57,667] INFO [Controller 0]: Broker failure callback for 2 (kafka.controller.KafkaController)
[2016-07-08 06:44:57,667] INFO [Controller 0]: Removed ArrayBuffer(2) from list of shutting down brokers. (kafka.controller.KafkaController)
[2016-07-08 06:44:57,668] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-07-08 06:44:57,668] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=ps,Partition=0,Replica=2],[Topic=ps,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-07-08 06:44:57,668] DEBUG [Controller 0]: Removing replica 2 from ISR 0 for partition [ps,0]. (kafka.controller.KafkaController)
[2016-07-08 06:44:57,681] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [ps,0] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-07-08 06:44:57,682] DEBUG [Controller 0]: Removing replica 2 from ISR 0 for partition [ps,1]. (kafka.controller.KafkaController)
[2016-07-08 06:44:57,700] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [ps,1] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-07-08 06:44:57,713] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-07-08 06:44:57,714] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=ps,Partition=0,Replica=2],[Topic=ps,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-07-08 06:44:57,714] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 24; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 1; Partitions: [ps,0] to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-07-08 06:44:57,714] WARN [Channel manager on controller 0]: Not sending request Name: StopReplicaRequest; Version: 0; CorrelationId: 24; ClientId: ; DeletePartitions: false; ControllerId: 0; ControllerEpoch: 1; Partitions: [ps,1] to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-07-08 06:45:08,194] INFO [Controller 2]: Controller starting up (kafka.controller.KafkaController)
[2016-07-08 06:45:08,223] INFO [Controller 2]: Controller startup complete (kafka.controller.KafkaController)
[2016-07-08 06:45:08,244] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 2,0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-07-08 06:45:08,304] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 2, deleted brokers: , all live brokers: 2,0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-07-08 06:45:08,304] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-07-08 06:45:08,317] INFO [Controller-0-to-broker-2-send-thread], Controller 0 connected to id:2,host:ip-172-31-41-134.us-west-2.compute.internal,port:9093 for sending state change requests (kafka.controller.RequestSendThread)
[2016-07-08 06:45:08,321] INFO [Controller 0]: New broker startup callback for 2 (kafka.controller.KafkaController)
[2016-07-08 06:45:08,321] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=ps,Partition=0,Replica=2],[Topic=ps,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-07-08 06:45:08,323] INFO [Controller-0-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-07-08 06:46:04,502] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-07-08 06:46:04,503] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([ps,0] -> List(2, 0)), 0 -> Map([producer,0] -> List(0), [TutorialTopic,0] -> List(0), [ps,1] -> List(0, 2))) (kafka.controller.KafkaController)
[2016-07-08 06:46:04,503] DEBUG [Controller 0]: topics not in preferred replica Map([ps,0] -> List(2, 0)) (kafka.controller.KafkaController)
[2016-07-08 06:46:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 1.000000 (kafka.controller.KafkaController)
[2016-07-08 06:46:04,505] INFO [Controller 0]: Starting preferred replica leader election for partitions [ps,0] (kafka.controller.KafkaController)
[2016-07-08 06:46:04,505] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [ps,0] (kafka.controller.PartitionStateMachine)
[2016-07-08 06:46:04,510] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 0 for partition [ps,0] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-07-08 06:46:04,511] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([producer,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [TutorialTopic,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [ps,0] -> (Leader:2,ISR:0,2,LeaderEpoch:2,ControllerEpoch:1), [ps,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:1)) (kafka.controller.PartitionStateMachine)
[2016-07-08 06:46:04,519] INFO [Controller 0]: Partition [ps,0] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-07-08 06:46:04,519] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:46:04,519] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:51:04,502] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-07-08 06:51:04,503] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([ps,0] -> List(2, 0)), 0 -> Map([producer,0] -> List(0), [TutorialTopic,0] -> List(0), [ps,1] -> List(0, 2))) (kafka.controller.KafkaController)
[2016-07-08 06:51:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:51:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:51:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:51:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:56:04,502] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-07-08 06:56:04,503] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([ps,0] -> List(2, 0)), 0 -> Map([producer,0] -> List(0), [TutorialTopic,0] -> List(0), [ps,1] -> List(0, 2))) (kafka.controller.KafkaController)
[2016-07-08 06:56:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:56:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-07-08 06:56:04,503] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-07-08 06:56:04,503] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
